jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: |
      curl https://raw.githubusercontent.com/tronkko/dirent/master/include/dirent.h --output ./include/dirent.h
      curl http://downloads.sourceforge.net/gnuwin32/libpng-1.2.37-bin.zip --output libpng.zip
    displayName: 'Get dependencies'
    continueOnError: false

  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64

      cl ./tools/chksum64.c
      cl ./tools/n64tool.c
      cl ./tools/dumpdfs/dumpdfs.c -I ./include/
      cl ./tools/mkdfs/mkdfs.c -I ./include/
      ::below required libpng (http://gnuwin32.sourceforge.net/packages/libpng.htm) need to work out how!
      [System.IO.Compression.ZipFile]::ExtractToDirectory(libpng.zip, libpng)
      cd libpng
      dir
      ::cl ./tools/mksprite/convtool.c
      ::cl ./tools/mksprite/mksprite.c
    displayName: 'Build Tools'
    continueOnError: false

  
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo hello from Linux
  - bash: |
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/linux64/
      mv "$BUILD_SOURCESDIRECTORY/scripts/build/libdragon-linux64.tar.gz" "$BUILD_ARTIFACTSTAGINGDIRECTORY/linux64/"
      mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/win64/
      mv "$BUILD_SOURCESDIRECTORY/scripts/build/libdragon-win64.zip" "$BUILD_ARTIFACTSTAGINGDIRECTORY/win64/"
    displayName: 'Move Artifacts to Staging Directory'
    continueOnError: false

  # Publish build artifacts to Azure Artifacts/TFS or a file share
  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'binaries' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      parallel: true # Optional
      #parallelCount: # Optional

  #TODO: should only publish to feed when on master branch!!!
  - task: UniversalPackages@0
    displayName: Universal Publish Linux Package
    inputs:
      command: publish
      publishDirectory: '$(Build.ArtifactStagingDirectory)/linux64/'
      vstsFeedPublish: 'Releases'
      vstsFeedPackagePublish: 'libdragon-linux64'
      packagePublishDescription: 'Libdragon SDK for the N64 compatible with Linux'
      #versionOption: custom
      #versionPublish: <Package version>
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: UniversalPackages@0
    displayName: Universal Publish Windows Package
    inputs:
      command: publish
      publishDirectory: '$(Build.ArtifactStagingDirectory)/win64/'
      vstsFeedPublish: 'Releases'
      vstsFeedPackagePublish: 'libdragon-win64'
      packagePublishDescription: 'Libdragon SDK for the N64 compatible with Windows'
      #versionOption: custom
      #versionPublish: <Package version>
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - bash: |
      curl -X PUT -T $BUILD_ARTIFACTSTAGINGDIRECTORY/linux64/libdragon-linux64.tar.gz -u$USER:$KEY https://api.bintray.com/content/n64-tools/libgragon/binaries/$BUILD_BUILDNUMBER/libdragon-linux64-$BUILD_BUILDNUMBER.tar.gz;publish=1;
      curl -X PUT -T $BUILD_ARTIFACTSTAGINGDIRECTORY/win64/libdragon-win64.zip -u$USER:$KEY https://api.bintray.com/content/n64-tools/libdragon/binaries/$BUILD_BUILDNUMBER/libdragon-win64-$BUILD_BUILDNUMBER.zip;publish=1;
    env:
      USER: $(BinTrayUser)
      KEY: $(BinTrayKey)
    displayName: 'Upload to Bintray'
    continueOnError: false
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))